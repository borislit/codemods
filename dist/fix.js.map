{
  "version": 3,
  "sources": ["../transforms/fix.ts", "../transforms/lib/file.js", "../transforms/lib/helpers.js"],
  "sourcesContent": ["import { getNameInCamelCase, getNameInPascalCase } from './lib/file';\nimport { extendApi } from './lib/helpers';\n\nexport default (file, api) => {\n  const j = api.jscodeshift;\n  const f = j(file.source);\n\n  extendApi(j);\n\n  if (f.find(j.ExportDefaultDeclaration).length === 0) {\n    console.log(`%s has no default export`, file.path);\n    return;\n  }\n\n  const topLevelVarNames = f.getTopLevelVarNames();\n  const usesReact = f.getImportsByPackageName('react').length > 0;\n  const intendedName = usesReact ? getNameInPascalCase(file) : getNameInCamelCase(file);\n  const caseInsensitiveMatch = (name) => name.toLowerCase() === intendedName.toLowerCase();\n  const existingName = topLevelVarNames.find(caseInsensitiveMatch);\n  const nameIsInUse = Boolean(existingName);\n  const exportName = existingName || intendedName;\n\n  if (!nameIsInUse) {\n    return f\n      .find(j.ExportDefaultDeclaration)\n      .insertBefore((path) => f.exportDefaultAsNamed(path, exportName))\n      .replaceWith(() => f.exportVarNameAsDefault(exportName))\n      .toSource();\n  }\n\n  const classExportOfName = f.getExportsByClassName(exportName);\n  const functionExportOfName = f.getExportsByFunctionName(exportName);\n  const namedExportOfName = f.getExportsByVarName(exportName);\n  const matchingClass = f.getTopLevelClassByName(exportName);\n  const matchingFunction = f.getTopLevelFunctionByName(exportName);\n  const matchingVariable = f.getTopLevelVariableByName(exportName);\n\n  if (classExportOfName.length > 0) {\n    console.log(`%s already exports a class called %s`, file.path, exportName);\n    return;\n  }\n\n  if (functionExportOfName.length > 0) {\n    console.log(`%s already exports a function called %s`, file.path, exportName);\n    return;\n  }\n\n  if (namedExportOfName.length > 0) {\n    console.log(`%s already exports a const called %s`, file.path, exportName);\n    return;\n  }\n\n  if (matchingClass.length > 0) {\n    console.log(`%s has a class called %s which is not exported`, file.path, exportName);\n    return matchingClass.replaceWith(() => f.exportClass(matchingClass.get())).toSource();\n  }\n\n  if (matchingFunction.length > 0) {\n    console.log(`%s has a function called %s which is not exported`, file.path, exportName);\n    return matchingFunction.replaceWith(() => f.exportFunction(matchingFunction.get())).toSource();\n  }\n\n  if (matchingVariable.length > 0) {\n    console.log(`%s has a variable called %s which is not exported`, file.path, exportName);\n    return matchingVariable.replaceWith(() => f.exportVariable(matchingVariable.get())).toSource();\n  }\n};\n", "const reFilePath = /.+\\/+/;\nconst reExtensions = /\\..+/;\nconst reNonCamelCasing = /[-_ ]([a-z])/g;\n\nexport const getName = (file) => file.path.replace('/index', '').replace(reFilePath, '').replace(reExtensions, '');\n\nexport const getNameInCamelCase = (file) => getName(file).replace(reNonCamelCasing, ($1) => $1.charAt(1).toUpperCase());\n\nexport const getNameInPascalCase = (file) =>\n  getNameInCamelCase(file).charAt(0).toUpperCase() + getNameInCamelCase(file).slice(1);\n", "const once = (fn) => {\n  const lock = { enabled: false };\n  return (j) => {\n    if (lock.enabled) return;\n    lock.enabled = true;\n    fn(j);\n  };\n};\n\nexport const extendApi = once((j) => {\n  const isTopLevel = (path) => path.parent.value.type === 'Program';\n  j.registerMethods({\n    getExportsByClassName(className) {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: { type: 'ClassDeclaration', id: { type: 'Identifier', name: className } },\n      });\n    },\n    getExportsByFunctionName(className) {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: { type: 'FunctionDeclaration', id: { type: 'Identifier', name: className } },\n      });\n    },\n    getExportsByVarName(varName) {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: {\n          type: 'VariableDeclaration',\n          declarations: [{ type: 'VariableDeclarator', id: { type: 'Identifier', name: varName } }],\n        },\n      });\n    },\n    getImportsByPackageName(packageName) {\n      return this.find(j.ImportDeclaration, {\n        source: {\n          value: packageName,\n        },\n      });\n    },\n    getNamedExportedClasses() {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: { type: 'ClassDeclaration', id: { type: 'Identifier' } },\n      });\n    },\n    getNamedExportedFunctions() {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: { type: 'FunctionDeclaration', id: { type: 'Identifier' } },\n      });\n    },\n    getNamedExportedVars() {\n      return this.find(j.ExportNamedDeclaration, {\n        declaration: { type: 'VariableDeclaration' },\n      });\n    },\n    getTopLevelClasses() {\n      return this.find(j.ClassDeclaration).filter(isTopLevel);\n    },\n    getTopLevelFunctions() {\n      return this.find(j.FunctionDeclaration).filter(isTopLevel);\n    },\n    getTopLevelVariables() {\n      return this.find(j.VariableDeclaration).filter(isTopLevel);\n    },\n    getTopLevelClassByName(className) {\n      return this.find(j.ClassDeclaration, {\n        id: { type: 'Identifier', name: className },\n      }).filter(isTopLevel);\n    },\n    getTopLevelFunctionByName(className) {\n      return this.find(j.FunctionDeclaration, {\n        id: { type: 'Identifier', name: className },\n      }).filter(isTopLevel);\n    },\n    getTopLevelVariableByName(varName) {\n      return this.find(j.VariableDeclaration, {\n        declarations: [{ type: 'VariableDeclarator', id: { type: 'Identifier', name: varName } }],\n      }).filter(isTopLevel);\n    },\n    getImportedVarNames() {\n      const identifiers = [];\n      this.find(j.ImportDeclaration).forEach((path) => {\n        const importDeclaration = path.value;\n        importDeclaration.specifiers.forEach((specifier) => {\n          identifiers.push(specifier.local.name);\n        });\n      });\n      return identifiers;\n    },\n    getNamedExportedClassNames() {\n      const identifiers = [];\n      this.getNamedExportedClasses().forEach((path) => {\n        const exportNamedDeclaration = path.value;\n        identifiers.push(exportNamedDeclaration.declaration.id.name);\n      });\n      return identifiers;\n    },\n    getNamedExportedFunctionNames() {\n      const identifiers = [];\n      this.getNamedExportedFunctions().forEach((path) => {\n        const exportNamedDeclaration = path.value;\n        identifiers.push(exportNamedDeclaration.declaration.id.name);\n      });\n      return identifiers;\n    },\n    getNamedExportedVarNames() {\n      const identifiers = [];\n      this.getNamedExportedVars().forEach((path) => {\n        const exportNamedDeclaration = path.value;\n        exportNamedDeclaration.declaration.declarations.forEach((declaration) => {\n          identifiers.push(declaration.id.name);\n        });\n      });\n      return identifiers;\n    },\n    getTopLevelClassNames() {\n      const identifiers = [];\n      this.getTopLevelClasses().forEach((path) => {\n        const classDeclaration = path.value;\n        identifiers.push(classDeclaration.id.name);\n      });\n      return identifiers;\n    },\n    getTopLevelFunctionNames() {\n      const identifiers = [];\n      this.getTopLevelFunctions().forEach((path) => {\n        const functionDeclaration = path.value;\n        identifiers.push(functionDeclaration.id.name);\n      });\n      return identifiers;\n    },\n    getTopLevelVariableNames() {\n      const identifiers = [];\n      this.getTopLevelVariables().forEach((path) => {\n        const variableDeclaration = path.value;\n        variableDeclaration.declarations.forEach((declaration) => {\n          identifiers.push(declaration.id.name);\n        });\n      });\n      return identifiers;\n    },\n    getTopLevelVarNames() {\n      return [].concat(\n        this.getImportedVarNames(),\n        this.getNamedExportedClassNames(),\n        this.getNamedExportedFunctionNames(),\n        this.getNamedExportedVarNames(),\n        this.getTopLevelClassNames(),\n        this.getTopLevelFunctionNames(),\n        this.getTopLevelVariableNames(),\n      );\n    },\n    exportClass(path) {\n      const classDeclaration = path.value;\n      return j.exportNamedDeclaration(\n        j.classDeclaration(j.identifier(classDeclaration.id.name), classDeclaration.body, classDeclaration.superClass),\n      );\n    },\n    exportDefaultAsNamed(path, name) {\n      const exportDefaultDeclaration = path.value;\n      const varName = j.identifier(name);\n      const varValue = exportDefaultDeclaration.declaration;\n      return j.exportNamedDeclaration(j.variableDeclaration('const', [j.variableDeclarator(varName, varValue)]));\n    },\n    exportVarNameAsDefault(name) {\n      return j.exportDefaultDeclaration(j.identifier(name));\n    },\n    exportFunction(path) {\n      const functionDeclaration = path.value;\n      return j.exportNamedDeclaration(\n        j.functionDeclaration(\n          j.identifier(functionDeclaration.id.name),\n          functionDeclaration.params,\n          functionDeclaration.body,\n        ),\n      );\n    },\n    exportVariable(path) {\n      const variableDeclaration = path.value;\n      return j.exportNamedDeclaration(j.variableDeclaration('const', variableDeclaration.declarations));\n    },\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
